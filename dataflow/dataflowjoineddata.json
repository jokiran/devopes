{
	"name": "dataflowjoineddata",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "deptflowsource1",
						"type": "DatasetReference"
					},
					"name": "Department"
				},
				{
					"dataset": {
						"referenceName": "empflowsource2",
						"type": "DatasetReference"
					},
					"name": "Employee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "flowsink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Department_id as string,",
				"          Name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Department",
				"source(output(",
				"          Employee_id as string,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          DOB as string,",
				"          Department_id as string,",
				"          Date_of_Joining as string,",
				"          Salary as string,",
				"          Manager_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employee",
				"Department, Employee join(Department@Department_id == Employee@Department_id,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['Joineddata.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}